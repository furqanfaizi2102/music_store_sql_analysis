--Who is the senior most employee based on job title?
select * from employee
order by levels desc
limit 1


--Which countries have the most Invoices?
select 
count(*) as no_of_invoices, 
billing_country
from invoice
group by billing_country
order by no_of_invoices  desc

--What are top 3 values of total invoice?
select total
from invoice
order by total desc
limit  3


/*Which city has the best customers? We would like to throw a promotional Music 
Festival in the city we made the most money. Write a query that returns one city that 
has the highest sum of invoice totals. Return both the city name & sum of all invoice 
totals*/

select 
sum(total) as total_invoice,
billing_city
from invoice
group by billing_city
order by total_invoice desc
limit 1



/*Who is the best customer? The customer who has spent the most money will be 
declared the best customer. Write a query that returns the person who has spent the 
most money*/

select i.customer_id,
c.first_name , c.last_name,
sum(i.total) as total_invoice
from invoice i
left join customer c
on i.customer_id = c.customer_id
group by i.customer_id,c.first_name , c.last_name
order by total_invoice desc
limit 1


/*Write query to return the email, first name, last name, & Genre of all Rock Music 
listeners. Return your list ordered alphabetically by email starting with A*/

select distinct
c.email,
c.first_name,
c.last_name
from customer c
left join invoice i
on c.customer_id = i.customer_id
left join invoice_line il
on i.invoice_id = il.invoice_id
where track_id in (select track_id from track t
left join genre g
on t.genre_id = g.genre_id	
where g.name = 'Rock')
order by email asc;



/*Let's invite the artists who have written the most rock music in our dataset. Write a 
query that returns the Artist name and total track count of the top 10 rock bands*/

select count(track_id),
a.name
from artist a
join album ab
on a.artist_id = ab.artist_id
join track t
on t.album_id = ab.album_id
join genre g
on t.genre_id = g.genre_id
where g.name = 'Rock'
group by a.name
order by count(track_id) desc
limit 10;


/*Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the 
longest songs listed first
*/

select 
name,
milliseconds
from track
where milliseconds > ( select avg(milliseconds)
					  from track)
order by milliseconds desc;



/*Find how much amount spent by each customer on artists? Write a query to return
customer name, artist name and total spent
*/
select 
customer.customer_id,
artist.name,
sum(invoice_line.unit_price*invoice_line.quantity) --over(partition by artist.name,customer.customer_id)
from customer
left join invoice 
on customer.customer_id = invoice.customer_id
left join invoice_line 
on invoice.invoice_id = invoice_line.invoice_id
left join track 
on invoice_line.track_id = track.track_id
left join album 
on track.album_id = album.album_id
left join artist on album.artist_id = artist.artist_id
group by 
grouping sets((customer.customer_id,artist.name))
order by customer.customer_id desc,artist.name asc


/*We want to find out the most popular music Genre for each country. We determine the 
most popular genre as the genre with the highest amount of purchases. Write a query 
that returns each country along with the top Genre. For countries where the maximum 
number of purchases is shared return all Genres
*/

with popular_genre as (
	select
sum(invoice_line.quantity),customer.country,genre.name,genre.genre_id,
row_number() over(partition by customer.country order by sum(invoice_line.quantity) desc ) as row_num
from invoice_line
join invoice 
on invoice.invoice_id = invoice_line.invoice_id
join customer
	on customer.customer_id=invoice.customer_id
	join track on track.track_id = invoice_line.track_id
	join genre on genre.genre_id = track.genre_id
	group by 2,3,4
	order by 2 asc,1 desc
)
select * from popular_genre where row_num <= 1


/*Write a query that determines the customer that has spent the most on music for each 
country. Write a query that returns the country along with the top customer and how
much they spent. For countries where the top amount spent is shared, provide all 
customers who spent this amount*/


with top_customer_per_country as (
select customer.country,customer.customer_id,
customer.first_name,customer.last_name,
sum(invoice.total) as total_spending,
row_number() over(partition by country order by sum(invoice.total) desc) as rank_per_country
from customer
left join invoice
on customer.customer_id = invoice.customer_id
group by 
customer.country, customer.customer_id,customer.first_name,customer.last_name
order by country asc, total_spending desc,customer.customer_id asc)
select * from top_customer_per_country where rank_per_country = 1




